import e from"../utils/clsx";import{rgbToRgba as t,hexToRGBA as l}from"../utils/color";import o from"./common";import r from"./light-theme";export const getTokenValue=(e,r,n=1)=>{if("undefined"==typeof document||!e)return"";let s=getComputedStyle(document.documentElement);const c=`--${o.prefix}-${e}-${r}`,u=s.getPropertyValue(c);if(u&&u.includes("var")&&getTokenValue(e,u),u&&1!==n){if(u.includes("rgb"))return t(u,n);if(u.includes("#"))return l(u,n)}return u};export const getDocumentCSSTokens=()=>{const e=[...Object.keys(o.theme.colors),...Object.keys(r.colors)],t=Object.keys(r.shadows);return{colors:e.reduce(((e,t)=>{const l=getTokenValue("colors",t);return l&&(e[t]={prefix:o.prefix,scale:"colors",token:t,value:l}),e}),{}),shadows:t.reduce(((e,t)=>{const l=getTokenValue("shadows",t);return l&&(e[t]={prefix:o.prefix,scale:"shadows",token:t,value:l}),e}),{})}};export const getDocumentTheme=e=>{var t;const l=(null==e||null==(t=e.getAttribute("style"))?void 0:t.split(";").map((e=>e.trim())).filter((e=>e.includes("color-scheme"))))||[],o=l.length>0?l[0].replace("color-scheme: ","").replace(";",""):"";return(null==e?void 0:e.getAttribute("data-theme"))||o};export const getThemeName=e=>"string"==typeof e&&null!=e&&e.includes("-theme")?null==e?void 0:e.replace("-theme",""):e;export const changeTheme=t=>{var l,o;if(!document)return;const r=document.documentElement,n=(null==r||null==(l=r.getAttribute("class"))?void 0:l.split(" ").filter((e=>!e.includes("theme")&&!e.includes("light")&&!e.includes("dark"))))||[],s=(null==r||null==(o=r.getAttribute("style"))?void 0:o.split(";").filter((e=>!e.includes("color-scheme")&&e.length)).map((e=>`${e};`)))||[],c=getThemeName(t);null==r||r.setAttribute("class",e(n,`${c}-theme`)),null==r||r.setAttribute("style",e(s,`color-scheme: ${c};`))};