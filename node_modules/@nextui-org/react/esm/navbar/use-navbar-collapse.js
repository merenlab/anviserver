import{useState as r,useEffect as t,useMemo as e}from"react";import{useDOMRef as n}from"../utils/dom";import{pickChild as o}from"../utils/collections";import{arrayToObject as l}from"../utils/object";import s from"../use-body-scroll";import i from"./navbar-collapse-item";import{useNavbarContext as a}from"./navbar-context";export function useNavbarCollapse(c={}){var u;const{css:m,children:p,ref:f,transitionDelay:v=0,transitionTime:d=350,transitionMatrix:h={in:"matrix(1, 0, 0, 1, 0, 0)",out:"matrix(0.97, 0, 0, 1, 0, 20)"},className:x,...b}=c,[C,R]=r(!1),T=a(),y=n(f),[,O]=o(p,i),[,L]=s(null,{scrollLayer:!0});t((()=>{var r,t;T.isCollapseOpen?L(!0):(y.current&&(null==(t=y.current)||null==t.scrollTo||t.scrollTo({top:0})),R(!1),L(!1));const e=()=>{var r;y.current&&(null==(r=y.current)?void 0:r.scrollTop)>0&&!C&&R(!0)};return null==(r=y.current)||r.addEventListener("scroll",e),()=>{var r;null==(r=y.current)||r.removeEventListener("scroll",e)}}),[T.isCollapseOpen]);const N=e((()=>{const r=[];var t;T.parentRef&&T.parentRef.current&&r.push({maxHeight:null==(t=T.parentRef.current)?void 0:t.clientHeight});return{...l(r),...m}}),[null==(u=T.parentRef)?void 0:u.current,m]);return{css:m,domRef:y,children:p,items:O,collpaseCss:N,isOpen:T.isCollapseOpen,hasScrolled:C,transitionDelay:v,transitionTime:d,transitionMatrix:h,className:x,otherProps:b}}