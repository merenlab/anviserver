import e,{useRef as o,useMemo as s}from"react";import{mergeProps as i}from"@react-aria/utils";import{useFocusRing as r}from"@react-aria/focus";import{useHover as t,usePress as a}from"@react-aria/interactions";import{useMenuItem as d}from"@react-aria/menu";import c from"../utils/checkmark";import n from"../utils/clsx";import{__DEV__ as p}from"../utils/assertion";import{useDropdownContext as l}from"./dropdown-context";import{StyledDropdownItem as m,StyledDropdownItemKbd as u,StyledDropdownItemContent as h,StyledDropdownItemIconWrapper as f,StyledDropdownItemContentWrapper as w,StyledDropdownItemDescription as x}from"./dropdown.styles";import{jsx as b}from"react/jsx-runtime";import{jsxs as v}from"react/jsx-runtime";const D=({as:e,css:p,item:D,state:N,color:y,icon:P,command:S,description:g,textColor:C,variant:F,autoFocus:k,isVirtualized:j,withDivider:A,dividerWeight:I,showFullDescription:M,className:V,onAction:W})=>{const{onClose:O,closeOnSelect:z,disableAnimation:H,borderWeight:K}=l(),{rendered:U,key:$}=D,q=N.selectionManager.isSelected($),B=N.selectionManager.focusedKey===D.key,E=N.disabledKeys.has($),G=o(null),{pressProps:J,isPressed:L}=a({ref:G,isDisabled:E}),{isFocusVisible:Q,focusProps:R}=r({autoFocus:k}),{hoverProps:T,isHovered:X}=t({isDisabled:E}),Y="none"!==N.selectionManager.selectionMode&&!E,{menuItemProps:Z,labelProps:_,descriptionProps:ee,keyboardShortcutProps:oe}=d({key:$,onClose:O,isSelected:q,isDisabled:E,"aria-label":D["aria-label"],closeOnSelect:z,isVirtualized:j,onAction:W},N,G),se=s((()=>X?"hovered":q?"selected":L?"pressed":E?"disabled":"ready"),[q,E,X,L]),ie=s((()=>D.props.textColor?D.props.textColor:D.props.color&&"default"===C?D.props.color:C),[C,D.props.color,D.props.textColor]),re=s((()=>g||D.props.description),[g,D.props.description]),te=s((()=>S||D.props.command),[S,D.props.command]),ae=s((()=>P||D.props.icon),[P,D.props.icon]);return v(m,{ref:G,...i(Z,T,J,R),as:D.props.as||e,className:n("nextui-dropdown-item",{"is-disabled":E,"is-selected":q,"is-selectable":Y,"is-hovered":X,"is-focused":B,"is-pressed":L},V,D.props.className),color:D.props.color||y,css:{...i(p,D.props.css)},"data-state":se,disableAnimation:H,dividerWeight:I||D.props.dividerWeight||K,isDisabled:E,isFocusVisible:Q,isFocused:B,isHovered:X,isPressed:L,isSelectable:Y,isSelected:q,shouldShowOutline:Q&&"shadow"===F,showFullDescription:M||D.props.showFullDescription,textColor:ie,variant:D.props.variant||F,withDescription:!!re,withDivider:A||D.props.withDivider,children:[ae&&b(f,{className:"nextui-dropdown-item-icon-wrapper",children:ae}),re?v(w,{children:[b(h,{className:"nextui-dropdown-item-content",..._,children:U}),b(x,{className:"nextui-dropdown-item-description",hasCommand:!!te,hasIcon:!!ae,...ee,children:re})]}):b(h,{className:"nextui-dropdown-item-content",..._,children:U}),te&&b(u,{className:"nextui-dropdown-item-command",...oe,children:te}),q&&b(c,{css:{ml:"$4"}})]})};p&&(D.displayName="NextUI.DropdownItem"),D.toString=()=>".nextui-dropdown-item";export default D;