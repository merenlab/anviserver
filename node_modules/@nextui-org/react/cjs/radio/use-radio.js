exports.__esModule=!0,exports.useRadio=void 0;var e=require("react"),i=require("@react-aria/radio"),o=require("@react-aria/interactions"),r=require("../utils/console"),a=require("../utils/assertion"),s=require("./radio-context");exports.useRadio=u=>{var l,d,t;const n=(0,s.useRadioGroupContext)(),{size:v=(null!=(l=n.size)?l:"md"),color:c=(null!=(d=n.color)?d:"default"),labelColor:p=(null!=(t=n.labelColor)?t:"default"),autoFocus:R,isSquared:b=!1,isDisabled:q=!1,disableAnimation:m=!1,...f}=u;n&&a.__DEV__&&(void 0!==f.checked&&(0,r.warn)('Remove props "checked" if in the Radio.Group.',"Radio"),void 0===f.value&&(0,r.warn)('Props "value" must be defined if in the Radio.Group.',"Radio"));const h=(0,e.useRef)(null),{inputProps:_}=(0,i.useRadio)({...f,...n,isDisabled:q},n.radioGroupState,h),x=(0,e.useMemo)((()=>{var e;return null!=(e=_.disabled)&&e}),[_.disabled]),{hoverProps:D,isHovered:P}=(0,o.useHover)({isDisabled:x});return{size:v,color:c,inputRef:h,autoFocus:R,isDisabled:x,labelColor:p,isInvalid:(0,e.useMemo)((()=>"invalid"===n.validationState),[n.validationState]),isHovered:P,isSquared:b,isRequired:(0,e.useMemo)((()=>{var e;return null!=(e=n.isRequired)&&e}),[n.isRequired]),disableAnimation:m,inputProps:_,hoverProps:D}};