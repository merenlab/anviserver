exports.__esModule=!0,exports.useDropdown=function(t={}){const{triggerRef:a,type:u="menu",trigger:o="press",isDisabled:l=!1,borderWeight:g,closeOnSelect:p,disableAnimation:c=!1,disableTriggerPressedAnimation:d=!1,isOpen:f,defaultOpen:m,onOpenChange:b,...P}=t,C=(0,e.useRef)(null),O=a||C,R=(0,e.useRef)(null),T=(0,e.useRef)(null),h=(0,n.useMenuTriggerState)({...t,isOpen:f,defaultOpen:m,onOpenChange:b}),{menuTriggerProps:y,menuProps:q}=(0,s.useMenuTrigger)({type:u,trigger:o,isDisabled:l},h,O),A=(0,e.useCallback)((()=>{h.close(),null==P.onClose||P.onClose()}),[h.close,P.onClose]),M=(0,e.useCallback)(((e={},s=null)=>{const{css:n,...t}=null!=a&&a.current?(0,r.mergeProps)(y,e):(0,r.mergeProps)(e,y);return{ref:(0,i.mergeRefs)(C,s),css:d?n:{'&[aria-haspopup="true"]&[aria-expanded="true"]':{opacity:.7,backfaceVisibility:"hidden",transform:"translateZ(0) scale(0.97)"},...n},...t}}),[C,a,y,d]);return{...q,popoverProps:P,state:h,ref:R,onClose:A,autoFocus:h.focusStrategy||!0,disableAnimation:c,disableTriggerPressedAnimation:d,menuRef:R,borderWeight:g,menuPopoverRef:T,menuTriggerRef:O,closeOnSelect:p,getMenuTriggerProps:M}};var e=require("react"),r=require("@react-aria/utils"),s=require("@react-aria/menu"),n=require("@react-stately/menu"),i=require("../utils/refs");