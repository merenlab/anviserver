exports.__esModule=!0,exports.default=void 0;var e=require("react"),t=require("../utils/object"),r=require("./codes"),o=require("./helper");var n=(n,s,a={})=>{const l=Array.isArray(s)?s:[s],{disableGlobalEvent:u=!1,capture:p=!1,stopPropagation:d=!1,preventDefault:y=!1,event:i="keydown"}=a,c=(0,o.getActiveModMap)(l),f=l.filter((e=>!(0,t.getKeyValue)(r.KeyMod,e))),{CtrlCmd:v,WinCtrl:C}=(0,o.getCtrlKeysByPlatform)(),K=e=>{c.Shift&&!e.shiftKey||c.Alt&&!e.altKey||c.CtrlCmd&&!e[v]||c.WinCtrl&&!e[C]||f.length>0&&!f.includes(e.keyCode)||(d&&e.stopPropagation(),y&&e.preventDefault(),n&&n(e))};(0,e.useEffect)((()=>(u||document.addEventListener(i,K),()=>{document.removeEventListener(i,K)})),[u]);const k=(e,t=!1)=>e!==i||t!==p?()=>{}:e=>K(e);return{bindings:{onKeyDown:k("keydown"),onKeyDownCapture:k("keydown",!0),onKeyPress:k("keypress"),onKeyPressCapture:k("keypress",!0),onKeyUp:k("keyup"),onKeyUpCapture:k("keyup",!0)}}};exports.default=n,module.exports=exports.default;