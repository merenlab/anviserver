import type { TreeState } from "@react-stately/tree";
import type { Node } from "@react-types/shared";
import type { CSS } from "../theme/stitches.config";
import type { SimpleColors, DropdownVariants } from "../utils/prop-types";
import React, { Key } from "react";
interface Props<T> {
    item: Node<T>;
    state: TreeState<T>;
    color?: SimpleColors;
    variant?: DropdownVariants;
    textColor?: SimpleColors;
    /**
     * Shows a divider between sections
     * @default true
     */
    withDivider?: boolean;
    as?: keyof JSX.IntrinsicElements;
    css?: CSS;
    className?: string;
    onAction?: (key: Key) => void;
}
declare type NativeAttrs = Omit<React.HTMLAttributes<unknown>, keyof Props<object>>;
export declare type DropdownSectionProps<T> = Props<T> & NativeAttrs;
declare const DropdownSection: {
    <T extends object>(props: DropdownSectionProps<T>): JSX.Element;
    displayName: string;
    toString(): string;
};
export default DropdownSection;
