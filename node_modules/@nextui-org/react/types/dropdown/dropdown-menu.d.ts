import type { SimpleColors, DropdownVariants } from "../utils/prop-types";
import type { CSS } from "../theme/stitches.config";
import React, { RefAttributes, PropsWithoutRef } from "react";
import { DOMProps, AriaLabelingProps } from "@react-types/shared";
import { AriaMenuProps } from "@react-types/menu";
interface Props<T> extends AriaMenuProps<T>, DOMProps, AriaLabelingProps {
    as?: keyof JSX.IntrinsicElements;
    /**
     * The color of the dropdown items on (focused, hovered)
     * @default 'default'
     */
    color?: SimpleColors;
    /**
     * The dropdowm item variation
     * @default 'flat'
     */
    variant?: DropdownVariants;
    /**
     * The text color of the dropdown items on (focused, hovered)
     * @default 'default'
     */
    textColor?: SimpleColors;
}
declare type NativeAttrs = Omit<React.HTMLAttributes<unknown>, keyof Props<object>>;
export declare type DropdownMenuProps<T = object> = Props<T> & NativeAttrs & {
    css?: CSS;
    containerCss?: CSS;
};
declare type DropdownComponent<T, P = {}> = React.ForwardRefExoticComponent<PropsWithoutRef<P> & RefAttributes<T>>;
declare const _default: DropdownComponent<HTMLUListElement, DropdownMenuProps<object>>;
export default _default;
