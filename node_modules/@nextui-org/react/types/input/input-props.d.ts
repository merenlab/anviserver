import React from "react";
import { NormalSizes, SimpleColors, ContentPosition, NormalWeights, AsProp } from "../utils/prop-types";
export declare type FormElement = HTMLInputElement | HTMLTextAreaElement;
export interface Props extends AsProp<"input" | "textarea">, React.HTMLAttributes<FormElement> {
    value?: string | ReadonlyArray<string> | number;
    fullWidth?: boolean;
    initialValue?: string;
    placeholder?: string;
    size?: NormalSizes;
    color?: SimpleColors;
    helperColor?: SimpleColors;
    status?: SimpleColors;
    readOnly?: boolean;
    shadow?: boolean;
    animated?: boolean;
    disabled?: boolean;
    required?: boolean;
    label?: string;
    helperText?: string;
    labelPlaceholder?: string;
    labelLeft?: string | React.ReactNode;
    labelRight?: string | React.ReactNode;
    contentLeft?: React.ReactNode;
    contentRight?: React.ReactNode;
    contentClickable?: boolean;
    contentRightStyling?: boolean;
    contentLeftStyling?: boolean;
    rounded?: boolean;
    bordered?: boolean;
    underlined?: boolean;
    borderWeight?: NormalWeights;
    width?: string;
    className?: string;
    clearable?: boolean;
    onChange?: (e: React.ChangeEvent<FormElement>) => void;
    onClearClick?: (e: React.MouseEvent<HTMLButtonElement>) => void;
    onFocus?: (e: React.FocusEvent<FormElement>) => void;
    onBlur?: (e: React.FocusEvent<FormElement>) => void;
    onContentClick?: (key: ContentPosition, e: React.MouseEvent<HTMLDivElement>) => void;
    autoComplete?: string;
}
export declare const defaultProps: {
    disabled: boolean;
    bordered: boolean;
    readOnly: boolean;
    clearable: boolean;
    rounded: boolean;
    animated: boolean;
    underlined: boolean;
    shadow: boolean;
    fullWidth: boolean;
    contentClickable: boolean;
    contentRightStyling: boolean;
    contentLeftStyling: boolean;
    required: boolean;
    width: string;
    size: "xs" | "sm" | "md" | "lg" | "xl";
    color: "default" | "primary" | "secondary" | "success" | "warning" | "error";
    helperColor: "default" | "primary" | "secondary" | "success" | "warning" | "error";
    status: "default" | "primary" | "secondary" | "success" | "warning" | "error";
    borderWeight: "light" | "normal" | "bold" | "extrabold" | "black";
    autoComplete: string;
    className: string;
    placeholder: string;
    initialValue: string;
};
