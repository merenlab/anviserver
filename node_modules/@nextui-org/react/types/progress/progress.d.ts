import type { CSS } from "../theme/stitches.config";
import React from "react";
import { ProgressVariantsProps } from "./progress.styles";
interface Props {
    value: number;
    striped?: boolean;
    animated?: boolean;
    indeterminated?: boolean;
    shadow?: boolean;
    max?: number;
    min?: number;
    css?: CSS;
    as?: keyof JSX.IntrinsicElements;
}
declare const defaultProps: {
    striped: boolean;
    animated: boolean;
    shadow: boolean;
    indeterminated: boolean;
    value: number;
    min: number;
    max: number;
};
declare type NativeAttrs = Omit<Partial<React.ProgressHTMLAttributes<unknown> & React.HTMLAttributes<unknown>>, keyof Props>;
export declare type ProgressProps = Props & typeof defaultProps & NativeAttrs & ProgressVariantsProps;
declare const _default: React.ComponentType<Partial<{
    striped: boolean;
    animated: boolean;
    shadow: boolean;
    indeterminated: boolean;
    value: number;
    min: number;
    max: number;
}> & Omit<Props & {
    striped: boolean;
    animated: boolean;
    shadow: boolean;
    indeterminated: boolean;
    value: number;
    min: number;
    max: number;
} & NativeAttrs & import("@stitches/react/types/styled-component").TransformProps<{
    color?: "default" | "primary" | "secondary" | "success" | "warning" | "error" | "gradient" | undefined;
    status?: "default" | "primary" | "secondary" | "success" | "warning" | "error" | undefined;
    size?: "xs" | "sm" | "md" | "lg" | "xl" | undefined;
    indeterminated?: boolean | "true" | undefined;
    squared?: boolean | "true" | undefined;
}, {
    xs: string;
    sm: string;
    md: string;
    lg: string;
    xl: string;
    xsMin: string;
    smMin: string;
    mdMin: string;
    lgMin: string;
    xlMin: string;
    xsMax: string;
    smMax: string;
    mdMax: string;
    lgMax: string;
    xlMax: string;
    motion: string;
    safari: string;
    hover: string;
    dark: string;
    light: string;
}>, "shadow" | "min" | "max" | "value" | "animated" | "indeterminated" | "striped">>;
export default _default;
