import type { PropsWithoutRef, RefAttributes } from "react";
import type { CSS } from "../theme/stitches.config";
import React from "react";
import { ObjectFit } from "../utils/prop-types";
import { ImageContainerVariantProps } from "./image.styles";
interface Props {
    src: string;
    autoResize?: boolean;
    showSkeleton?: boolean;
    width?: number | string;
    height?: number | string;
    maxDelay?: number;
    objectFit?: ObjectFit;
    className?: string;
    css?: CSS;
    containerCss?: CSS;
}
declare type NativeAttrs = Omit<React.ImgHTMLAttributes<unknown>, keyof Props>;
export declare type ImageProps = Props & NativeAttrs & ImageContainerVariantProps;
export declare const Image: React.ForwardRefExoticComponent<Props & NativeAttrs & import("@stitches/react/types/styled-component").TransformProps<{
    ready?: boolean | "true" | "false" | undefined;
}, {
    xs: string;
    sm: string;
    md: string;
    lg: string;
    xl: string;
    xsMin: string;
    smMin: string;
    mdMin: string;
    lgMin: string;
    xlMin: string;
    xsMax: string;
    smMax: string;
    mdMax: string;
    lgMax: string;
    xlMax: string;
    motion: string;
    safari: string;
    hover: string;
    dark: string;
    light: string;
}> & RefAttributes<HTMLImageElement>>;
declare type MemoImageComponent<T, P = {}> = React.ForwardRefExoticComponent<PropsWithoutRef<P> & RefAttributes<T>>;
declare const _default: MemoImageComponent<HTMLImageElement, ImageProps>;
export default _default;
