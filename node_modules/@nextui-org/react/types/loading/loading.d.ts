import type { CSS } from "../theme/stitches.config";
import React from "react";
import { NormalSizes, NormalLoaders } from "../utils/prop-types";
import { LoadingContainerVariantsProps } from "./loading.styles";
interface Props {
    size?: NormalSizes;
    gradientBackground?: string | null;
    type?: NormalLoaders;
    loadingCss?: CSS;
    as?: keyof JSX.IntrinsicElements;
    children?: React.ReactNode;
}
declare const defaultProps: {
    size: "xs" | "sm" | "md" | "lg" | "xl";
    type: "default" | "gradient" | "points" | "points-opacity" | "spinner";
};
declare type NativeAttrs = Omit<React.HTMLAttributes<unknown>, keyof Props>;
export declare type LoadingProps = Props & typeof defaultProps & NativeAttrs & LoadingContainerVariantsProps & {
    css?: CSS;
};
declare const _default: React.ComponentType<Partial<{
    size: "xs" | "sm" | "md" | "lg" | "xl";
    type: "default" | "gradient" | "points" | "points-opacity" | "spinner";
}> & Omit<Props & {
    size: "xs" | "sm" | "md" | "lg" | "xl";
    type: "default" | "gradient" | "points" | "points-opacity" | "spinner";
} & NativeAttrs & import("@stitches/react/types/styled-component").TransformProps<{
    color?: "default" | "primary" | "secondary" | "success" | "warning" | "error" | "white" | "currentColor" | undefined;
    textColor?: "default" | "primary" | "secondary" | "success" | "warning" | "error" | "white" | undefined;
}, {
    xs: string;
    sm: string;
    md: string;
    lg: string;
    xl: string;
    xsMin: string;
    smMin: string;
    mdMin: string;
    lgMin: string;
    xlMin: string;
    xsMax: string;
    smMax: string;
    mdMax: string;
    lgMax: string;
    xlMax: string;
    motion: string;
    safari: string;
    hover: string;
    dark: string;
    light: string;
}> & {
    css?: CSS | undefined;
}, "size" | "type">>;
export default _default;
