import type { CSS } from "../theme/stitches.config";
import React, { RefAttributes, PropsWithoutRef } from "react";
import { TableStateProps } from "@react-stately/table";
import { SelectionMode, SelectionBehavior } from "@react-types/shared";
import { TableColumn as TableColumnBase, TableCell as TableCellBase, TableRow as TableRowBase, TableBody as TableBodyBase, TableHeader as TableHeaderBase } from "./base";
import TablePagination from "./table-pagination";
import { TableVariantsProps, TableContainerVariantsProps } from "./table.styles";
interface Props<T> extends TableStateProps<T> {
    selectionMode?: SelectionMode;
    selectionBehavior?: SelectionBehavior;
    animated?: boolean;
    hideLoading?: boolean;
    as?: keyof JSX.IntrinsicElements;
}
declare type NativeAttrs = Omit<React.TableHTMLAttributes<unknown>, keyof Props<object>>;
export declare type TableProps<T = object> = Props<T> & NativeAttrs & Omit<TableVariantsProps, "isMultiple" | "shadow" | "hasPagination"> & TableContainerVariantsProps & {
    css?: CSS;
    containerCss?: CSS;
};
declare type TableComponent<T, P = {}> = React.ForwardRefExoticComponent<PropsWithoutRef<P> & RefAttributes<T>> & {
    Cell: typeof TableCellBase;
    Column: typeof TableColumnBase;
    Row: typeof TableRowBase;
    Header: typeof TableHeaderBase;
    Body: typeof TableBodyBase;
    Pagination: typeof TablePagination;
};
declare const _default: TableComponent<HTMLTableElement, TableProps<object>>;
export default _default;
