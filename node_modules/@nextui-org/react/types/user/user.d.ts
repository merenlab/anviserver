import type { CSS } from "../theme/stitches.config";
import React, { ReactNode } from "react";
import { NormalColors, NormalSizes } from "../utils/prop-types";
import UserLink from "./user-link";
interface Props {
    name: ReactNode | string;
    children?: ReactNode;
    color?: NormalColors;
    size?: NormalSizes;
    src?: string;
    zoomed?: boolean;
    bordered?: boolean;
    pointer?: boolean;
    altText?: string;
    text?: string;
    description?: string;
    squared?: boolean;
    as?: keyof JSX.IntrinsicElements;
}
declare const defaultProps: {
    size: string;
    squared: boolean;
    bordered: boolean;
};
declare type NativeAttrs = Omit<React.HTMLAttributes<unknown>, keyof Props>;
export declare type UserProps = Props & typeof defaultProps & NativeAttrs & {
    css?: CSS;
};
export declare const User: React.ForwardRefExoticComponent<Props & {
    size: string;
    squared: boolean;
    bordered: boolean;
} & NativeAttrs & {
    css?: CSS | undefined;
} & React.RefAttributes<HTMLDivElement>>;
declare type UserComponent<P = {}> = React.NamedExoticComponent<P> & {
    Link: typeof UserLink;
};
declare type ComponentProps = Partial<typeof defaultProps> & Omit<Props, keyof typeof defaultProps> & NativeAttrs & {
    css?: CSS;
};
declare const _default: UserComponent<ComponentProps>;
export default _default;
