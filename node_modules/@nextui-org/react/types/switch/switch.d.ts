import React from "react";
import { CSS } from "../theme/stitches.config";
import { SwitchContainerVariantsProps } from "./switch.styles";
interface SwitchEventTarget {
    checked: boolean;
}
export interface SwitchEvent {
    target: SwitchEventTarget;
    stopPropagation: () => void;
    preventDefault: () => void;
    nativeEvent: React.ChangeEvent;
}
interface Props {
    checked?: boolean;
    squared?: boolean;
    bordered?: boolean;
    animated?: boolean;
    shadow?: boolean;
    icon?: React.ReactNode;
    iconOn?: React.ReactNode;
    iconOff?: React.ReactNode;
    initialChecked?: boolean;
    preventDefault?: boolean;
    name?: string;
    disabled?: boolean;
    onChange?: (ev: SwitchEvent) => void;
    as?: keyof JSX.IntrinsicElements;
}
declare const defaultProps: {
    disabled: boolean;
    bordered: boolean;
    shadow: boolean;
    squared: boolean;
    animated: boolean;
    preventDefault: boolean;
    initialChecked: boolean;
};
declare type NativeAttrs = Omit<React.LabelHTMLAttributes<unknown>, keyof Props>;
export declare type SwitchProps = Props & typeof defaultProps & NativeAttrs & SwitchContainerVariantsProps & {
    css?: CSS;
};
declare const _default: React.ComponentType<Partial<{
    disabled: boolean;
    bordered: boolean;
    shadow: boolean;
    squared: boolean;
    animated: boolean;
    preventDefault: boolean;
    initialChecked: boolean;
}> & Omit<Props & {
    disabled: boolean;
    bordered: boolean;
    shadow: boolean;
    squared: boolean;
    animated: boolean;
    preventDefault: boolean;
    initialChecked: boolean;
} & NativeAttrs & import("@stitches/react/types/styled-component").TransformProps<{
    color?: "default" | "primary" | "secondary" | "success" | "warning" | "error" | undefined;
    size?: "xs" | "sm" | "md" | "lg" | "xl" | undefined;
    borderWeight?: "light" | "normal" | "bold" | "extrabold" | "black" | undefined;
    disabled?: boolean | "true" | undefined;
    animated?: boolean | "false" | undefined;
}, {
    xs: string;
    sm: string;
    md: string;
    lg: string;
    xl: string;
    xsMin: string;
    smMin: string;
    mdMin: string;
    lgMin: string;
    xlMin: string;
    xsMax: string;
    smMax: string;
    mdMax: string;
    lgMax: string;
    xlMax: string;
    motion: string;
    safari: string;
    hover: string;
    dark: string;
    light: string;
}> & {
    css?: CSS | undefined;
}, "shadow" | "bordered" | "squared" | "preventDefault" | "animated" | "disabled" | "initialChecked">>;
export default _default;
