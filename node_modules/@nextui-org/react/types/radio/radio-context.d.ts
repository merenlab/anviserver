/// <reference types="react" />
export declare const RadioGroupProvider: import("react").Provider<{
    size: "xs" | "sm" | "md" | "lg" | "xl";
    color: "default" | "primary" | "secondary" | "success" | "warning" | "error";
    orientation: import("@react-types/shared/src/orientation").Orientation;
    labelColor: "default" | "primary" | "secondary" | "success" | "warning" | "error";
    isRequired: boolean | undefined;
    validationState: import("@react-types/shared/src/inputs").ValidationState | undefined;
    radioGroupState: import("@react-stately/radio").RadioGroupState;
    radioGroupProps: Omit<import("react").HTMLAttributes<HTMLElement>, "css">;
    labelProps: Omit<import("react").HTMLAttributes<HTMLElement>, "css">;
}>, useRadioGroupContext: () => {
    size: "xs" | "sm" | "md" | "lg" | "xl";
    color: "default" | "primary" | "secondary" | "success" | "warning" | "error";
    orientation: import("@react-types/shared/src/orientation").Orientation;
    labelColor: "default" | "primary" | "secondary" | "success" | "warning" | "error";
    isRequired: boolean | undefined;
    validationState: import("@react-types/shared/src/inputs").ValidationState | undefined;
    radioGroupState: import("@react-stately/radio").RadioGroupState;
    radioGroupProps: Omit<import("react").HTMLAttributes<HTMLElement>, "css">;
    labelProps: Omit<import("react").HTMLAttributes<HTMLElement>, "css">;
};
