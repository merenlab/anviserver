import type { AriaRadioGroupProps } from "@react-types/radio";
import type { NormalSizes, SimpleColors } from "../utils/prop-types";
import React from "react";
interface Props extends AriaRadioGroupProps {
    size?: NormalSizes;
    color?: SimpleColors;
    labelColor?: SimpleColors;
}
declare type NativeAttrs = Omit<React.HTMLAttributes<unknown>, keyof Props>;
export declare type UseRadioGroupProps = Props & NativeAttrs;
/**
 * @internal
 */
export declare const useRadioGroup: (props: UseRadioGroupProps) => {
    size: "xs" | "sm" | "md" | "lg" | "xl";
    color: "default" | "primary" | "secondary" | "success" | "warning" | "error";
    orientation: import("@react-types/shared/src/orientation").Orientation;
    labelColor: "default" | "primary" | "secondary" | "success" | "warning" | "error";
    isRequired: boolean | undefined;
    validationState: import("@react-types/shared/src/inputs").ValidationState | undefined;
    radioGroupState: import("@react-stately/radio").RadioGroupState;
    radioGroupProps: Omit<React.HTMLAttributes<HTMLElement>, "css">;
    labelProps: Omit<React.HTMLAttributes<HTMLElement>, "css">;
};
export declare type UseRadioGroupReturn = ReturnType<typeof useRadioGroup>;
export {};
