{"mappings":"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","sources":["packages/@react-aria/focus/src/index.ts","packages/@react-aria/focus/src/FocusScope.tsx","packages/@react-aria/focus/src/focusSafely.ts","packages/@react-aria/focus/src/isElementVisible.ts","packages/@react-aria/focus/src/FocusRing.tsx","packages/@react-aria/focus/src/useFocusRing.ts","packages/@react-aria/focus/src/useFocusable.tsx"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nexport {FocusScope, useFocusManager, getFocusableTreeWalker, createFocusManager} from './FocusScope';\nexport {FocusRing} from './FocusRing';\nexport {FocusableProvider, useFocusable} from './useFocusable';\nexport {useFocusRing} from './useFocusRing';\nexport {focusSafely} from './focusSafely';\n\nexport type {FocusScopeProps, FocusManager, FocusManagerOptions} from './FocusScope';\nexport type {FocusRingProps} from './FocusRing';\nexport type {FocusableAria, FocusableOptions, FocusableProviderProps} from './useFocusable';\nexport type {AriaFocusRingProps, FocusRingAria} from './useFocusRing';\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {FocusableElement} from '@react-types/shared';\nimport {focusSafely} from './focusSafely';\nimport {isElementVisible} from './isElementVisible';\nimport React, {ReactNode, RefObject, useContext, useEffect, useRef} from 'react';\nimport {useLayoutEffect} from '@react-aria/utils';\n\n// import {FocusScope, useFocusScope} from 'react-events/focus-scope';\n// export {FocusScope};\n\nexport interface FocusScopeProps {\n  /** The contents of the focus scope. */\n  children: ReactNode,\n\n  /**\n   * Whether to contain focus inside the scope, so users cannot\n   * move focus outside, for example in a modal dialog.\n   */\n  contain?: boolean,\n\n  /**\n   * Whether to restore focus back to the element that was focused\n   * when the focus scope mounted, after the focus scope unmounts.\n   */\n  restoreFocus?: boolean,\n\n  /** Whether to auto focus the first focusable element in the focus scope on mount. */\n  autoFocus?: boolean\n}\n\nexport interface FocusManagerOptions {\n  /** The element to start searching from. The currently focused element by default. */\n  from?: Element,\n  /** Whether to only include tabbable elements, or all focusable elements. */\n  tabbable?: boolean,\n  /** Whether focus should wrap around when it reaches the end of the scope. */\n  wrap?: boolean,\n  /** A callback that determines whether the given element is focused. */\n  accept?: (node: Element) => boolean\n}\n\nexport interface FocusManager {\n  /** Moves focus to the next focusable or tabbable element in the focus scope. */\n  focusNext(opts?: FocusManagerOptions): FocusableElement,\n  /** Moves focus to the previous focusable or tabbable element in the focus scope. */\n  focusPrevious(opts?: FocusManagerOptions): FocusableElement,\n  /** Moves focus to the first focusable or tabbable element in the focus scope. */\n  focusFirst(opts?: FocusManagerOptions): FocusableElement,\n    /** Moves focus to the last focusable or tabbable element in the focus scope. */\n  focusLast(opts?: FocusManagerOptions): FocusableElement\n}\n\ntype ScopeRef = RefObject<Element[]>;\ninterface IFocusContext {\n  scopeRef: ScopeRef,\n  focusManager: FocusManager\n}\n\nconst FocusContext = React.createContext<IFocusContext>(null);\n\nlet activeScope: ScopeRef = null;\nlet scopes: Map<ScopeRef, ScopeRef | null> = new Map();\n\n// This is a hacky DOM-based implementation of a FocusScope until this RFC lands in React:\n// https://github.com/reactjs/rfcs/pull/109\n// For now, it relies on the DOM tree order rather than the React tree order, and is probably\n// less optimized for performance.\n\n/**\n * A FocusScope manages focus for its descendants. It supports containing focus inside\n * the scope, restoring focus to the previously focused element on unmount, and auto\n * focusing children on mount. It also acts as a container for a programmatic focus\n * management interface that can be used to move focus forward and back in response\n * to user events.\n */\nexport function FocusScope(props: FocusScopeProps) {\n  let {children, contain, restoreFocus, autoFocus} = props;\n  let startRef = useRef<HTMLSpanElement>();\n  let endRef = useRef<HTMLSpanElement>();\n  let scopeRef = useRef<Element[]>([]);\n  let ctx = useContext(FocusContext);\n  let parentScope = ctx?.scopeRef;\n\n  useLayoutEffect(() => {\n    // Find all rendered nodes between the sentinels and add them to the scope.\n    let node = startRef.current.nextSibling;\n    let nodes = [];\n    while (node && node !== endRef.current) {\n      nodes.push(node);\n      node = node.nextSibling;\n    }\n\n    scopeRef.current = nodes;\n  }, [children, parentScope]);\n\n  useLayoutEffect(() => {\n    scopes.set(scopeRef, parentScope);\n    return () => {\n      // Restore the active scope on unmount if this scope or a descendant scope is active.\n      // Parent effect cleanups run before children, so we need to check if the\n      // parent scope actually still exists before restoring the active scope to it.\n      if (\n        (scopeRef === activeScope || isAncestorScope(scopeRef, activeScope)) &&\n        (!parentScope || scopes.has(parentScope))\n      ) {\n        activeScope = parentScope;\n      }\n      scopes.delete(scopeRef);\n    };\n  }, [scopeRef, parentScope]);\n\n  useFocusContainment(scopeRef, contain);\n  useRestoreFocus(scopeRef, restoreFocus, contain);\n  useAutoFocus(scopeRef, autoFocus);\n\n  let focusManager = createFocusManagerForScope(scopeRef);\n\n  return (\n    <FocusContext.Provider value={{scopeRef, focusManager}}>\n      <span data-focus-scope-start hidden ref={startRef} />\n      {children}\n      <span data-focus-scope-end hidden ref={endRef} />\n    </FocusContext.Provider>\n  );\n}\n\n/**\n * Returns a FocusManager interface for the parent FocusScope.\n * A FocusManager can be used to programmatically move focus within\n * a FocusScope, e.g. in response to user events like keyboard navigation.\n */\nexport function useFocusManager(): FocusManager {\n  return useContext(FocusContext)?.focusManager;\n}\n\nfunction createFocusManagerForScope(scopeRef: React.RefObject<Element[]>): FocusManager {\n  return {\n    focusNext(opts: FocusManagerOptions = {}) {\n      let scope = scopeRef.current;\n      let {from, tabbable, wrap, accept} = opts;\n      let node = from || document.activeElement;\n      let sentinel = scope[0].previousElementSibling;\n      let walker = getFocusableTreeWalker(getScopeRoot(scope), {tabbable, accept}, scope);\n      walker.currentNode = isElementInScope(node, scope) ? node : sentinel;\n      let nextNode = walker.nextNode() as FocusableElement;\n      if (!nextNode && wrap) {\n        walker.currentNode = sentinel;\n        nextNode = walker.nextNode() as FocusableElement;\n      }\n      if (nextNode) {\n        focusElement(nextNode, true);\n      }\n      return nextNode;\n    },\n    focusPrevious(opts: FocusManagerOptions = {}) {\n      let scope = scopeRef.current;\n      let {from, tabbable, wrap, accept} = opts;\n      let node = from || document.activeElement;\n      let sentinel = scope[scope.length - 1].nextElementSibling;\n      let walker = getFocusableTreeWalker(getScopeRoot(scope), {tabbable, accept}, scope);\n      walker.currentNode = isElementInScope(node, scope) ? node : sentinel;\n      let previousNode = walker.previousNode() as FocusableElement;\n      if (!previousNode && wrap) {\n        walker.currentNode = sentinel;\n        previousNode = walker.previousNode() as FocusableElement;\n      }\n      if (previousNode) {\n        focusElement(previousNode, true);\n      }\n      return previousNode;\n    },\n    focusFirst(opts = {}) {\n      let scope = scopeRef.current;\n      let {tabbable, accept} = opts;\n      let walker = getFocusableTreeWalker(getScopeRoot(scope), {tabbable, accept}, scope);\n      walker.currentNode = scope[0].previousElementSibling;\n      let nextNode = walker.nextNode() as FocusableElement;\n      if (nextNode) {\n        focusElement(nextNode, true);\n      }\n      return nextNode;\n    },\n    focusLast(opts = {}) {\n      let scope = scopeRef.current;\n      let {tabbable, accept} = opts;\n      let walker = getFocusableTreeWalker(getScopeRoot(scope), {tabbable, accept}, scope);\n      walker.currentNode = scope[scope.length - 1].nextElementSibling;\n      let previousNode = walker.previousNode() as FocusableElement;\n      if (previousNode) {\n        focusElement(previousNode, true);\n      }\n      return previousNode;\n    }\n  };\n}\n\nconst focusableElements = [\n  'input:not([disabled]):not([type=hidden])',\n  'select:not([disabled])',\n  'textarea:not([disabled])',\n  'button:not([disabled])',\n  'a[href]',\n  'area[href]',\n  'summary',\n  'iframe',\n  'object',\n  'embed',\n  'audio[controls]',\n  'video[controls]',\n  '[contenteditable]'\n];\n\nconst FOCUSABLE_ELEMENT_SELECTOR = focusableElements.join(':not([hidden]),') + ',[tabindex]:not([disabled]):not([hidden])';\n\nfocusableElements.push('[tabindex]:not([tabindex=\"-1\"]):not([disabled])');\nconst TABBABLE_ELEMENT_SELECTOR = focusableElements.join(':not([hidden]):not([tabindex=\"-1\"]),');\n\nfunction getScopeRoot(scope: Element[]) {\n  return scope[0].parentElement;\n}\n\nfunction useFocusContainment(scopeRef: RefObject<Element[]>, contain: boolean) {\n  let focusedNode = useRef<FocusableElement>();\n\n  let raf = useRef(null);\n  useLayoutEffect(() => {\n    let scope = scopeRef.current;\n    if (!contain) {\n      // if contain was changed, then we should cancel any ongoing waits to pull focus back into containment\n      if (raf.current) {\n        cancelAnimationFrame(raf.current);\n        raf.current = null;\n      }\n      return;\n    }\n\n    // Handle the Tab key to contain focus within the scope\n    let onKeyDown = (e) => {\n      if (e.key !== 'Tab' || e.altKey || e.ctrlKey || e.metaKey || scopeRef !== activeScope) {\n        return;\n      }\n\n      let focusedElement = document.activeElement;\n      let scope = scopeRef.current;\n      if (!isElementInScope(focusedElement, scope)) {\n        return;\n      }\n\n      let walker = getFocusableTreeWalker(getScopeRoot(scope), {tabbable: true}, scope);\n      walker.currentNode = focusedElement;\n      let nextElement = (e.shiftKey ? walker.previousNode() : walker.nextNode()) as FocusableElement;\n      if (!nextElement) {\n        walker.currentNode = e.shiftKey ? scope[scope.length - 1].nextElementSibling : scope[0].previousElementSibling;\n        nextElement = (e.shiftKey ? walker.previousNode() : walker.nextNode())  as FocusableElement;\n      }\n\n      e.preventDefault();\n      if (nextElement) {\n        focusElement(nextElement, true);\n      }\n    };\n\n    let onFocus = (e) => {\n      // If focusing an element in a child scope of the currently active scope, the child becomes active.\n      // Moving out of the active scope to an ancestor is not allowed.\n      if (!activeScope || isAncestorScope(activeScope, scopeRef)) {\n        activeScope = scopeRef;\n        focusedNode.current = e.target;\n      } else if (scopeRef === activeScope && !isElementInChildScope(e.target, scopeRef)) {\n        // If a focus event occurs outside the active scope (e.g. user tabs from browser location bar),\n        // restore focus to the previously focused node or the first tabbable element in the active scope.\n        if (focusedNode.current) {\n          focusedNode.current.focus();\n        } else if (activeScope) {\n          focusFirstInScope(activeScope.current);\n        }\n      } else if (scopeRef === activeScope) {\n        focusedNode.current = e.target;\n      }\n    };\n\n    let onBlur = (e) => {\n      // Firefox doesn't shift focus back to the Dialog properly without this\n      raf.current = requestAnimationFrame(() => {\n        // Use document.activeElement instead of e.relatedTarget so we can tell if user clicked into iframe\n        if (scopeRef === activeScope && !isElementInChildScope(document.activeElement, scopeRef)) {\n          activeScope = scopeRef;\n          focusedNode.current = e.target;\n          focusedNode.current.focus();\n        }\n      });\n    };\n\n    document.addEventListener('keydown', onKeyDown, false);\n    document.addEventListener('focusin', onFocus, false);\n    scope.forEach(element => element.addEventListener('focusin', onFocus, false));\n    scope.forEach(element => element.addEventListener('focusout', onBlur, false));\n    return () => {\n      document.removeEventListener('keydown', onKeyDown, false);\n      document.removeEventListener('focusin', onFocus, false);\n      scope.forEach(element => element.removeEventListener('focusin', onFocus, false));\n      scope.forEach(element => element.removeEventListener('focusout', onBlur, false));\n    };\n  }, [scopeRef, contain]);\n\n  // eslint-disable-next-line arrow-body-style\n  useEffect(() => {\n    return () => {\n      if (raf.current) {\n        cancelAnimationFrame(raf.current);\n      }\n    };\n  }, [raf]);\n}\n\nfunction isElementInAnyScope(element: Element) {\n  for (let scope of scopes.keys()) {\n    if (isElementInScope(element, scope.current)) {\n      return true;\n    }\n  }\n  return false;\n}\n\nfunction isElementInScope(element: Element, scope: Element[]) {\n  return scope.some(node => node.contains(element));\n}\n\nfunction isElementInChildScope(element: Element, scope: ScopeRef) {\n  // node.contains in isElementInScope covers child scopes that are also DOM children,\n  // but does not cover child scopes in portals.\n  for (let s of scopes.keys()) {\n    if ((s === scope || isAncestorScope(scope, s)) && isElementInScope(element, s.current)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction isAncestorScope(ancestor: ScopeRef, scope: ScopeRef) {\n  let parent = scopes.get(scope);\n  if (!parent) {\n    return false;\n  }\n\n  if (parent === ancestor) {\n    return true;\n  }\n\n  return isAncestorScope(ancestor, parent);\n}\n\nfunction focusElement(element: FocusableElement | null, scroll = false) {\n  if (element != null && !scroll) {\n    try {\n      focusSafely(element);\n    } catch (err) {\n      // ignore\n    }\n  } else if (element != null) {\n    try {\n      element.focus();\n    } catch (err) {\n      // ignore\n    }\n  }\n}\n\nfunction focusFirstInScope(scope: Element[]) {\n  let sentinel = scope[0].previousElementSibling;\n  let walker = getFocusableTreeWalker(getScopeRoot(scope), {tabbable: true}, scope);\n  walker.currentNode = sentinel;\n  focusElement(walker.nextNode() as FocusableElement);\n}\n\nfunction useAutoFocus(scopeRef: RefObject<Element[]>, autoFocus: boolean) {\n  const autoFocusRef = React.useRef(autoFocus);\n  useEffect(() => {\n    if (autoFocusRef.current) {\n      activeScope = scopeRef;\n      if (!isElementInScope(document.activeElement, activeScope.current)) {\n        focusFirstInScope(scopeRef.current);\n      }\n    }\n    autoFocusRef.current = false;\n  }, []);\n}\n\nfunction useRestoreFocus(scopeRef: RefObject<Element[]>, restoreFocus: boolean, contain: boolean) {\n  // create a ref during render instead of useLayoutEffect so the active element is saved before a child with autoFocus=true mounts.\n  const nodeToRestoreRef = useRef(typeof document !== 'undefined' ? document.activeElement as FocusableElement : null);\n\n  // useLayoutEffect instead of useEffect so the active element is saved synchronously instead of asynchronously.\n  useLayoutEffect(() => {\n    let nodeToRestore = nodeToRestoreRef.current;\n    if (!restoreFocus) {\n      return;\n    }\n\n    // Handle the Tab key so that tabbing out of the scope goes to the next element\n    // after the node that had focus when the scope mounted. This is important when\n    // using portals for overlays, so that focus goes to the expected element when\n    // tabbing out of the overlay.\n    let onKeyDown = (e: KeyboardEvent) => {\n      if (e.key !== 'Tab' || e.altKey || e.ctrlKey || e.metaKey) {\n        return;\n      }\n\n      let focusedElement = document.activeElement as FocusableElement;\n      if (!isElementInScope(focusedElement, scopeRef.current)) {\n        return;\n      }\n\n      // Create a DOM tree walker that matches all tabbable elements\n      let walker = getFocusableTreeWalker(document.body, {tabbable: true});\n\n      // Find the next tabbable element after the currently focused element\n      walker.currentNode = focusedElement;\n      let nextElement = (e.shiftKey ? walker.previousNode() : walker.nextNode()) as FocusableElement;\n\n      if (!document.body.contains(nodeToRestore) || nodeToRestore === document.body) {\n        nodeToRestore = null;\n      }\n\n      // If there is no next element, or it is outside the current scope, move focus to the\n      // next element after the node to restore to instead.\n      if ((!nextElement || !isElementInScope(nextElement, scopeRef.current)) && nodeToRestore) {\n        walker.currentNode = nodeToRestore;\n\n        // Skip over elements within the scope, in case the scope immediately follows the node to restore.\n        do {\n          nextElement = (e.shiftKey ? walker.previousNode() : walker.nextNode()) as FocusableElement;\n        } while (isElementInScope(nextElement, scopeRef.current));\n\n        e.preventDefault();\n        e.stopPropagation();\n        if (nextElement) {\n          focusElement(nextElement, true);\n        } else {\n           // If there is no next element and the nodeToRestore isn't within a FocusScope (i.e. we are leaving the top level focus scope)\n           // then move focus to the body.\n           // Otherwise restore focus to the nodeToRestore (e.g menu within a popover -> tabbing to close the menu should move focus to menu trigger)\n          if (!isElementInAnyScope(nodeToRestore)) {\n            focusedElement.blur();\n          } else {\n            focusElement(nodeToRestore, true);\n          }\n        }\n      }\n    };\n\n    if (!contain) {\n      document.addEventListener('keydown', onKeyDown, true);\n    }\n\n    return () => {\n      if (!contain) {\n        document.removeEventListener('keydown', onKeyDown, true);\n      }\n\n      if (restoreFocus && nodeToRestore && isElementInScope(document.activeElement, scopeRef.current)) {\n        requestAnimationFrame(() => {\n          // Only restore focus if we've lost focus to the body, the alternative is that focus has been purposefully moved elsewhere\n          if (document.body.contains(nodeToRestore) && document.activeElement === document.body) {\n            focusElement(nodeToRestore);\n          }\n        });\n      }\n    };\n  }, [scopeRef, restoreFocus, contain]);\n}\n\n/**\n * Create a [TreeWalker]{@link https://developer.mozilla.org/en-US/docs/Web/API/TreeWalker}\n * that matches all focusable/tabbable elements.\n */\nexport function getFocusableTreeWalker(root: Element, opts?: FocusManagerOptions, scope?: Element[]) {\n  let selector = opts?.tabbable ? TABBABLE_ELEMENT_SELECTOR : FOCUSABLE_ELEMENT_SELECTOR;\n  let walker = document.createTreeWalker(\n    root,\n    NodeFilter.SHOW_ELEMENT,\n    {\n      acceptNode(node) {\n        // Skip nodes inside the starting node.\n        if (opts?.from?.contains(node)) {\n          return NodeFilter.FILTER_REJECT;\n        }\n\n        if ((node as Element).matches(selector)\n          && isElementVisible(node as Element)\n          && (!scope || isElementInScope(node as Element, scope))\n          && (!opts?.accept || opts.accept(node as Element))\n        ) {\n          return NodeFilter.FILTER_ACCEPT;\n        }\n\n        return NodeFilter.FILTER_SKIP;\n      }\n    }\n  );\n\n  if (opts?.from) {\n    walker.currentNode = opts.from;\n  }\n\n  return walker;\n}\n\n/**\n * Creates a FocusManager object that can be used to move focus within an element.\n */\nexport function createFocusManager(ref: RefObject<Element>, defaultOptions: FocusManagerOptions = {}): FocusManager {\n  return {\n    focusNext(opts: FocusManagerOptions = {}) {\n      let root = ref.current;\n      if (!root) {\n        return;\n      }\n      let {from, tabbable = defaultOptions.tabbable, wrap = defaultOptions.wrap, accept = defaultOptions.accept} = opts;\n      let node = from || document.activeElement;\n      let walker = getFocusableTreeWalker(root, {tabbable, accept});\n      if (root.contains(node)) {\n        walker.currentNode = node;\n      }\n      let nextNode = walker.nextNode() as FocusableElement;\n      if (!nextNode && wrap) {\n        walker.currentNode = root;\n        nextNode = walker.nextNode() as FocusableElement;\n      }\n      if (nextNode) {\n        focusElement(nextNode, true);\n      }\n      return nextNode;\n    },\n    focusPrevious(opts: FocusManagerOptions = defaultOptions) {\n      let root = ref.current;\n      if (!root) {\n        return;\n      }\n      let {from, tabbable = defaultOptions.tabbable, wrap = defaultOptions.wrap, accept = defaultOptions.accept} = opts;\n      let node = from || document.activeElement;\n      let walker = getFocusableTreeWalker(root, {tabbable, accept});\n      if (root.contains(node)) {\n        walker.currentNode = node;\n      } else {\n        let next = last(walker);\n        if (next) {\n          focusElement(next, true);\n        }\n        return next;\n      }\n      let previousNode = walker.previousNode() as FocusableElement;\n      if (!previousNode && wrap) {\n        walker.currentNode = root;\n        previousNode = last(walker);\n      }\n      if (previousNode) {\n        focusElement(previousNode, true);\n      }\n      return previousNode;\n    },\n    focusFirst(opts = defaultOptions) {\n      let root = ref.current;\n      if (!root) {\n        return;\n      }\n      let {tabbable = defaultOptions.tabbable, accept = defaultOptions.accept} = opts;\n      let walker = getFocusableTreeWalker(root, {tabbable, accept});\n      let nextNode = walker.nextNode() as FocusableElement;\n      if (nextNode) {\n        focusElement(nextNode, true);\n      }\n      return nextNode;\n    },\n    focusLast(opts = defaultOptions) {\n      let root = ref.current;\n      if (!root) {\n        return;\n      }\n      let {tabbable = defaultOptions.tabbable, accept = defaultOptions.accept} = opts;\n      let walker = getFocusableTreeWalker(root, {tabbable, accept});\n      let next = last(walker);\n      if (next) {\n        focusElement(next, true);\n      }\n      return next;\n    }\n  };\n}\n\nfunction last(walker: TreeWalker) {\n  let next: FocusableElement;\n  let last: FocusableElement;\n  do {\n    last = walker.lastChild() as FocusableElement;\n    if (last) {\n      next = last;\n    }\n  } while (last);\n  return next;\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an 'AS IS' BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {FocusableElement} from '@react-types/shared';\nimport {focusWithoutScrolling, runAfterTransition} from '@react-aria/utils';\nimport {getInteractionModality} from '@react-aria/interactions';\n\n/**\n * A utility function that focuses an element while avoiding undesired side effects such\n * as page scrolling and screen reader issues with CSS transitions.\n */\nexport function focusSafely(element: FocusableElement) {\n  // If the user is interacting with a virtual cursor, e.g. screen reader, then\n  // wait until after any animated transitions that are currently occurring on\n  // the page before shifting focus. This avoids issues with VoiceOver on iOS\n  // causing the page to scroll when moving focus if the element is transitioning\n  // from off the screen.\n  if (getInteractionModality() === 'virtual') {\n    let lastFocusedElement = document.activeElement;\n    runAfterTransition(() => {\n      // If focus did not move and the element is still in the document, focus it.\n      if (document.activeElement === lastFocusedElement && document.contains(element)) {\n        focusWithoutScrolling(element);\n      }\n    });\n  } else {\n    focusWithoutScrolling(element);\n  }\n}\n","/*\n * Copyright 2021 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nfunction isStyleVisible(element: Element) {\n  if (!(element instanceof HTMLElement) && !(element instanceof SVGElement)) {\n    return false;\n  }\n\n  let {display, visibility} = element.style;\n\n  let isVisible = (\n    display !== 'none' &&\n    visibility !== 'hidden' &&\n    visibility !== 'collapse'\n  );\n\n  if (isVisible) {\n    const {getComputedStyle} = element.ownerDocument.defaultView;\n    let {display: computedDisplay, visibility: computedVisibility} = getComputedStyle(element);\n\n    isVisible = (\n      computedDisplay !== 'none' &&\n      computedVisibility !== 'hidden' &&\n      computedVisibility !== 'collapse'\n    );\n  }\n\n  return isVisible;\n}\n\nfunction isAttributeVisible(element: Element, childElement?: Element) {\n  return (\n    !element.hasAttribute('hidden') &&\n    (element.nodeName === 'DETAILS' &&\n      childElement &&\n      childElement.nodeName !== 'SUMMARY'\n      ? element.hasAttribute('open')\n      : true)\n  );\n}\n\n/**\n * Adapted from https://github.com/testing-library/jest-dom and \n * https://github.com/vuejs/vue-test-utils-next/.\n * Licensed under the MIT License.\n * @param element - Element to evaluate for display or visibility.\n */  \nexport function isElementVisible(element: Element, childElement?: Element) {\n  return (\n    element.nodeName !== '#comment' &&\n    isStyleVisible(element) &&\n    isAttributeVisible(element, childElement) &&\n    (!element.parentElement || isElementVisible(element.parentElement, element))\n  );\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport clsx from 'clsx';\nimport {mergeProps} from '@react-aria/utils';\nimport React, {ReactElement} from 'react';\nimport {useFocusRing} from './useFocusRing';\n\nexport interface FocusRingProps {\n  /** Child element to apply CSS classes to. */\n  children: ReactElement,\n  /** CSS class to apply when the element is focused. */\n  focusClass?: string,\n  /** CSS class to apply when the element has keyboard focus. */\n  focusRingClass?: string,\n  /**\n   * Whether to show the focus ring when something\n   * inside the container element has focus (true), or\n   * only if the container itself has focus (false).\n   * @default false\n   */\n  within?: boolean,\n  /** Whether the element is a text input. */\n  isTextInput?: boolean,\n  /** Whether the element will be auto focused. */\n  autoFocus?: boolean\n}\n\n/**\n * A utility component that applies a CSS class when an element has keyboard focus.\n * Focus rings are visible only when the user is interacting with a keyboard,\n * not with a mouse, touch, or other input methods.\n */\nexport function FocusRing(props: FocusRingProps) {\n  let {children, focusClass, focusRingClass} = props;\n  let {isFocused, isFocusVisible, focusProps} = useFocusRing(props);\n  let child = React.Children.only(children);\n\n  return React.cloneElement(child, mergeProps(child.props, {\n    ...focusProps,\n    className: clsx({\n      [focusClass || '']: isFocused,\n      [focusRingClass || '']: isFocusVisible\n    })\n  }));\n}\n","import {DOMAttributes} from '@react-types/shared';\nimport {isFocusVisible, useFocus, useFocusVisibleListener, useFocusWithin} from '@react-aria/interactions';\nimport {useCallback, useState} from 'react';\nimport {useRef} from 'react';\n\nexport interface AriaFocusRingProps {\n  /**\n   * Whether to show the focus ring when something\n   * inside the container element has focus (true), or\n   * only if the container itself has focus (false).\n   * @default 'false'\n   */\n  within?: boolean,\n\n  /** Whether the element is a text input. */\n  isTextInput?: boolean,\n\n  /** Whether the element will be auto focused. */\n  autoFocus?: boolean\n}\n\nexport interface FocusRingAria {\n  /** Whether the element is currently focused. */\n  isFocused: boolean,\n\n  /** Whether keyboard focus should be visible. */\n  isFocusVisible: boolean,\n\n  /** Props to apply to the container element with the focus ring. */\n  focusProps: DOMAttributes\n}\n\n/**\n * Determines whether a focus ring should be shown to indicate keyboard focus.\n * Focus rings are visible only when the user is interacting with a keyboard,\n * not with a mouse, touch, or other input methods.\n */\nexport function useFocusRing(props: AriaFocusRingProps = {}): FocusRingAria {\n  let {\n    autoFocus = false,\n    isTextInput,\n    within\n  } = props;\n  let state = useRef({\n    isFocused: false,\n    isFocusVisible: autoFocus || isFocusVisible()\n  });\n  let [isFocused, setFocused] = useState(false);\n  let [isFocusVisibleState, setFocusVisible] = useState(() => state.current.isFocused && state.current.isFocusVisible);\n\n  let updateState = useCallback(() => setFocusVisible(state.current.isFocused && state.current.isFocusVisible), []);\n\n  let onFocusChange = useCallback(isFocused => {\n    state.current.isFocused = isFocused;\n    setFocused(isFocused);\n    updateState();\n  }, [updateState]);\n\n  useFocusVisibleListener((isFocusVisible) => {\n    state.current.isFocusVisible = isFocusVisible;\n    updateState();\n  }, [], {isTextInput});\n\n  let {focusProps} = useFocus({\n    isDisabled: within,\n    onFocusChange\n  });\n\n  let {focusWithinProps} = useFocusWithin({\n    isDisabled: !within,\n    onFocusWithinChange: onFocusChange\n  });\n\n  return {\n    isFocused,\n    isFocusVisible: state.current.isFocused && isFocusVisibleState,\n    focusProps: within ? focusWithinProps : focusProps\n  };\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {DOMAttributes, FocusableDOMProps, FocusableElement, FocusableProps} from '@react-types/shared';\nimport {focusSafely} from './';\nimport {mergeProps, useSyncRef} from '@react-aria/utils';\nimport React, {MutableRefObject, ReactNode, RefObject, useContext, useEffect, useRef} from 'react';\nimport {useFocus, useKeyboard} from '@react-aria/interactions';\n\nexport interface FocusableOptions extends FocusableProps, FocusableDOMProps {\n  /** Whether focus should be disabled. */\n  isDisabled?: boolean\n}\n\nexport interface FocusableProviderProps extends DOMAttributes {\n  /** The child element to provide DOM props to. */\n  children?: ReactNode\n}\n\ninterface FocusableContextValue extends FocusableProviderProps {\n  ref?: MutableRefObject<FocusableElement>\n}\n\nlet FocusableContext = React.createContext<FocusableContextValue>(null);\n\nfunction useFocusableContext(ref: RefObject<FocusableElement>): FocusableContextValue {\n  let context = useContext(FocusableContext) || {};\n  useSyncRef(context, ref);\n\n  // eslint-disable-next-line\n  let {ref: _, ...otherProps} = context;\n  return otherProps;\n}\n\n/**\n * Provides DOM props to the nearest focusable child.\n */\nfunction FocusableProvider(props: FocusableProviderProps, ref: RefObject<FocusableElement>) {\n  let {children, ...otherProps} = props;\n  let context = {\n    ...otherProps,\n    ref\n  };\n\n  return (\n    <FocusableContext.Provider value={context}>\n      {children}\n    </FocusableContext.Provider>\n  );\n}\n\nlet _FocusableProvider = React.forwardRef(FocusableProvider);\nexport {_FocusableProvider as FocusableProvider};\n\nexport interface FocusableAria {\n  /** Props for the focusable element. */\n  focusableProps: DOMAttributes\n}\n\n/**\n * Used to make an element focusable and capable of auto focus.\n */\nexport function useFocusable(props: FocusableOptions, domRef: RefObject<FocusableElement>): FocusableAria {\n  let {focusProps} = useFocus(props);\n  let {keyboardProps} = useKeyboard(props);\n  let interactions = mergeProps(focusProps, keyboardProps);\n  let domProps = useFocusableContext(domRef);\n  let interactionProps = props.isDisabled ? {} : domProps;\n  let autoFocusRef = useRef(props.autoFocus);\n\n  useEffect(() => {\n    if (autoFocusRef.current && domRef.current) {\n      focusSafely(domRef.current);\n    }\n    autoFocusRef.current = false;\n  }, [domRef]);\n\n  return {\n    focusableProps: mergeProps(\n      {\n        ...interactions,\n        tabIndex: props.excludeFromTabOrder && !props.isDisabled ? -1 : undefined\n      },\n      interactionProps\n    )\n  };\n}\n"],"names":[],"version":3,"file":"module.js.map"}